version: '3'

services:
  django1:
    build:
      context: ./final
      dockerfile: dockerfile
    container_name: django1
    ports:
      - "8001:8001"
    environment:
      - DJANGO_DEBUG=1
      - DATABASE_URL=postgres://myuser:mypassword@db:5432/mydb
      - REDIS_URL=redis://localhost:6379/1  
    command: gunicorn final.wsgi:application --bind 0.0.0.0:8001
    depends_on:
      - db
      - redis
    networks:
      - monitoring

  django2:
    build:
      context: ./final
      dockerfile: dockerfile
    container_name: django2
    ports:
      - "8002:8002"
    environment:
      - DJANGO_DEBUG=1
      - DATABASE_URL=postgres://myuser:mypassword@db:5432/mydb  
      - REDIS_URL=redis://localhost:6379/1  
    command: gunicorn final.wsgi:application --bind 0.0.0.0:8002
    depends_on:
      - db
      - redis
    networks:
      - monitoring

  django3:
    build:
      context: ./final
      dockerfile: dockerfile
    container_name: django3
    ports:
      - "8003:8003"
    environment:
      - DJANGO_DEBUG=1
      - DATABASE_URL=postgres://myuser:mypassword@db:5432/mydb  
      - REDIS_URL=redis://localhost:6379/1  
    command: gunicorn final.wsgi:application --bind 0.0.0.0:8003
    depends_on:
      - db
      - redis
    networks:
      - monitoring

  nginx:
    build:
      context: ./nginx
      dockerfile: dockerfile
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf 
    links:
      - django1
      - django2
      - django3
    depends_on:
      - django1
      - django2
      - django3
    networks:
      - monitoring
  
  db:
    image: postgres:13
    container_name: db
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
  
  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
  
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - monitoring
  
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - monitoring
    

volumes:
  db_data:
  redis_data:

networks:
  monitoring:
    driver: bridge